<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cold Starts on Mikhail Shilkov</title>
    <link>https://mikhail.io/tags/cold-starts/</link>
    <description>Recent content in Cold Starts on Mikhail Shilkov</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Mikhail Shilkov - All rights reserved</copyright>
    <lastBuildDate>Tue, 05 Jan 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mikhail.io/tags/cold-starts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Lambda: Cold Start Duration per Instance Size</title>
      <link>https://mikhail.io/serverless/coldstarts/aws/instances/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/aws/instances/</guid>
      <description>&lt;p&gt;AWS Lambda has a setting to define the memory size that gets allocated to a single instance of a function. The CPU resources are allocated proportionally to the memory. So, in theory, larger instances could start faster.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Lambda: Cold Start Duration per Language</title>
      <link>https://mikhail.io/serverless/coldstarts/aws/languages/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/aws/languages/</guid>
      <description>&lt;p&gt;The following chart shows the typical range of cold starts in AWS Lambda, broken down per language. The darker ranges are the most common 67% of durations, and lighter ranges include 95%.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure Functions: Cold Start Duration per Language</title>
      <link>https://mikhail.io/serverless/coldstarts/azure/languages/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/azure/languages/</guid>
      <description>&lt;p&gt;The following chart shows the typical range of cold starts in Azure Functions, broken down per language. The darker ranges are the most common 67% of durations, and lighter ranges include 95%.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cold Starts in AWS Lambda</title>
      <link>https://mikhail.io/serverless/coldstarts/aws/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/aws/</guid>
      <description>&lt;p&gt;This article describes AWS Lambda—the dynamically scaled and billed-per-execution compute service. Instances of Lambdas are added and removed dynamically. When a new instance handles its first request, the response time increases, which is called a &lt;strong&gt;cold start&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cold Starts in Azure Functions</title>
      <link>https://mikhail.io/serverless/coldstarts/azure/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/azure/</guid>
      <description>&lt;p&gt;This article describes Azure Functions running on Consumption Plan—the dynamically scaled and billed-per-execution compute service. Consumption Plan adds and removes instances dynamically. When a new instance handles its first request, the response time increases, which is called a &lt;strong&gt;cold start&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cold Starts in Google Cloud Functions</title>
      <link>https://mikhail.io/serverless/coldstarts/gcp/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/gcp/</guid>
      <description>&lt;p&gt;This article describes Google Cloud Functions—the dynamically scaled and billed-per-execution compute service. Instances of Cloud Functions are added and removed dynamically. When a new instance handles its first request, the response time suffers, which is called a &lt;strong&gt;cold start&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comparison of Cold Starts in Serverless Functions across AWS, Azure, and GCP</title>
      <link>https://mikhail.io/serverless/coldstarts/big3/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/big3/</guid>
      <description>&lt;p&gt;This article compares Function-as-a-Service offerings of Big-3 cloud providers in terms of cold starts. AWS Lambda, Azure Functions (Consumption Plan), and Google Cloud Functions are all dynamically scaled and billed-per-execution compute services. Instances of cloud functions are added and removed dynamically. When a new instance handles its first request, the response time increases, which is called a &lt;strong&gt;cold start&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Cloud Functions: Cold Start Duration per Instance Size</title>
      <link>https://mikhail.io/serverless/coldstarts/gcp/instances/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/gcp/instances/</guid>
      <description>&lt;p&gt;Google Cloud Functions have a setting to define the memory size that gets allocated to a single instance of a function. The CPU resources are allocated proportionally to the memory. So, in theory, larger instances could start faster.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Cloud Functions: Cold Start Duration per Language</title>
      <link>https://mikhail.io/serverless/coldstarts/gcp/languages/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/gcp/languages/</guid>
      <description>&lt;p&gt;The following chart shows the typical range of cold starts in Google Cloud Functions, broken down per language. The darker ranges are the most common 67% of durations, and lighter ranges include 95%.&lt;/p&gt;</description>
    </item>
    <item>
      <title>When Does Cold Start Happen on AWS Lambda?</title>
      <link>https://mikhail.io/serverless/coldstarts/aws/intervals/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/aws/intervals/</guid>
      <description>&lt;p&gt;The first cold start happens when the very first request comes in.&lt;/p&gt;&#xA;&lt;p&gt;After that request is processed, the instance stays alive for the time being to be reused for subsequent requests. But for how long?&lt;/p&gt;</description>
    </item>
    <item>
      <title>When Does Cold Start Happen on Azure Functions?</title>
      <link>https://mikhail.io/serverless/coldstarts/azure/intervals/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/azure/intervals/</guid>
      <description>&lt;p&gt;The first cold start happens when the very first request comes in after deployment.&lt;/p&gt;&#xA;&lt;p&gt;After that request is processed, the instance stays alive for the time being to be reused for subsequent requests. But for how long?&lt;/p&gt;</description>
    </item>
    <item>
      <title>When Does Cold Start Happen on Google Cloud Functions?</title>
      <link>https://mikhail.io/serverless/coldstarts/gcp/intervals/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/gcp/intervals/</guid>
      <description>&lt;p&gt;The very first cold start happens when the very first request comes in after deployment.&lt;/p&gt;&#xA;&lt;p&gt;After that request is processed, the instance stays alive for the time being to be reused for subsequent requests. But for how long?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cold Start Duration of VPC-connected AWS Lambda</title>
      <link>https://mikhail.io/serverless/coldstarts/aws/vpc/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/aws/vpc/</guid>
      <description>&lt;p&gt;AWS Lambda might need to access resources inside Amazon Virtual Private Cloud (Amazon VPC). In the past, configuring VPC access slowed down the cold starts significantly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Lambda Cold Starts After 10 Minutes</title>
      <link>https://mikhail.io/2019/08/aws-lambda-cold-starts-after-10-minutes/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/08/aws-lambda-cold-starts-after-10-minutes/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve just released an update to the &lt;a href=&#34;https://mikhail.io/serverless/coldstarts/&#34;&gt;Serverless Cold Starts&lt;/a&gt; section of my website. The most significant change to the previous dataset seems to be in how AWS treats idle instances of AWS Lambda.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Less Frequent Cold Starts in Google Cloud Functions</title>
      <link>https://mikhail.io/2019/04/less-frequent-cold-starts-in-google-cloud-functions/</link>
      <pubDate>Sat, 27 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/04/less-frequent-cold-starts-in-google-cloud-functions/</guid>
      <description>&lt;p&gt;Several days ago, I released an update to the &lt;a href=&#34;https://mikhail.io/serverless/coldstarts/&#34;&gt;Serverless Cold Starts&lt;/a&gt; section of my website. The most significant change to the previous dataset seems to be in how GCP treats idle instances of Google Cloud Functions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visualizing (Absence Of) Cold Starts in Binaris</title>
      <link>https://mikhail.io/2019/04/visualizing-absence-of-cold-starts-binaris/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/04/visualizing-absence-of-cold-starts-binaris/</guid>
      <description>&lt;p&gt;In my previous article, &lt;a href=&#34;https://mikhail.io/2019/03/visualizing-cold-starts/&#34;&gt;Visualizing Cold Starts&lt;/a&gt;, I visually demonstrated the impact of &lt;a href=&#34;https://mikhail.io/serverless/coldstarts/&#34;&gt;serverless cold starts&lt;/a&gt; on map loading time. When the serverless function serving the map tiles is cold, users experience a noticeable delay before they can see the selected map view.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reducing Cold Start Duration in Azure Functions</title>
      <link>https://mikhail.io/2019/03/reducing-azure-functions-cold-start-time/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/03/reducing-azure-functions-cold-start-time/</guid>
      <description>&lt;p&gt;Back in February, I published the first version of &lt;a href=&#34;https://mikhail.io/serverless/coldstarts/azure/&#34;&gt;Cold Starts in Azure Functions&lt;/a&gt;—the detailed analysis of cold start durations in serverless Azure. The article showed the following numbers for C# and JavaScript functions:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visualizing Cold Starts</title>
      <link>https://mikhail.io/2019/03/visualizing-cold-starts/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/03/visualizing-cold-starts/</guid>
      <description>&lt;p&gt;I &lt;a href=&#34;https://mikhail.io/serverless/coldstarts/&#34;&gt;wrote a lot&lt;/a&gt; about cold starts of serverless functions. The articles are full of charts and numbers which are hopefully useful but might be hard to internalize. I decided to come up with a way to represent colds starts visually.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Evergreen Serverless Performance Reviews</title>
      <link>https://mikhail.io/2019/02/evergreen-serverless-performance-reviews/</link>
      <pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/02/evergreen-serverless-performance-reviews/</guid>
      <description>&lt;p&gt;In the past 6 months I published several blog posts under the same theme of comparing the serverless services of the top cloud providers in terms of their performance and scalability properties:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Measuring Cold Starts</title>
      <link>https://mikhail.io/serverless/coldstarts/methodology/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/methodology/</guid>
      <description>&lt;p&gt;We are testing cold starts on cloud functions responding to HTTP requests because that&amp;rsquo;s where the increased latency matters the most.&lt;/p&gt;&#xA;&lt;p&gt;Each cloud function responds with a simple &lt;code&gt;200 OK&lt;/code&gt; with the following custom response headers:&lt;/p&gt;</description>
    </item>
    <item>
      <title>What Is a Cold Start?</title>
      <link>https://mikhail.io/serverless/coldstarts/define/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/define/</guid>
      <description>&lt;p&gt;Auto-provisioning and auto-scalability are the killer features of Function-as-a-Service cloud offerings. No management required, cloud providers deliver infrastructure based on the actual incoming load.&lt;/p&gt;&#xA;&lt;p&gt;One drawback of such dynamic provisioning is a phenomenon called &lt;strong&gt;cold start&lt;/strong&gt;. Essentially, applications that haven&amp;rsquo;t been used for a while take longer to startup and to handle the first request.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure Functions V2 Is Released, How Performant Is It?</title>
      <link>https://mikhail.io/2018/10/azure-functions-v2-released-how-performant-is-it/</link>
      <pubDate>Wed, 10 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/10/azure-functions-v2-released-how-performant-is-it/</guid>
      <description>&lt;p&gt;Azure Functions major version 2.0 was released into GA a few days back during Microsoft Ignite. The runtime is now&#xA;based on .NET Core and thus is cross-platform and more interoperable. It has a nice extensibility story too.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Serverless: Cold Start War</title>
      <link>https://mikhail.io/2018/08/serverless-cold-start-war/</link>
      <pubDate>Thu, 30 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/08/serverless-cold-start-war/</guid>
      <description>&lt;p&gt;&lt;em&gt;The newer and much more detailed cold start comparison is now available: &lt;a href=&#34;https://mikhail.io/serverless/coldstarts/&#34;&gt;Cold Starts in Serverless Functions&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Serverless cloud services are hot. Except when they are not :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Lambda Warmer as Pulumi Component</title>
      <link>https://mikhail.io/2018/08/aws-lambda-warmer-as-pulumi-component/</link>
      <pubDate>Thu, 02 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/08/aws-lambda-warmer-as-pulumi-component/</guid>
      <description>&lt;p&gt;Out of curiosity, I&amp;rsquo;m currently investigating cold starts of Function-as-a-Service platforms of major cloud providers. Basically,&#xA;if a function is not called for several minutes, the cloud instance behind it might be recycled, and then the next request will&#xA;take longer because a new instance will need to be provisioned.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cold Starts Beyond First Request in Azure Functions</title>
      <link>https://mikhail.io/2018/05/azure-functions-cold-starts-beyond-first-load/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/05/azure-functions-cold-starts-beyond-first-load/</guid>
      <description>&lt;p&gt;In my &lt;a href=&#34;https://mikhail.io/2018/04/azure-functions-cold-starts-in-numbers/&#34;&gt;previous article&lt;/a&gt;&#xA;I&amp;rsquo;ve explored the topic of Cold Starts in Azure Functions. Particularly, I&amp;rsquo;ve measured the&#xA;cold start delays per language and runtime version.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure Functions: Cold Starts in Numbers</title>
      <link>https://mikhail.io/2018/04/azure-functions-cold-starts-in-numbers/</link>
      <pubDate>Tue, 24 Apr 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/04/azure-functions-cold-starts-in-numbers/</guid>
      <description>&lt;p&gt;Auto-provisioning and auto-scalability are the killer features of Function-as-a-Service&#xA;cloud offerings, and Azure Functions in particular.&lt;/p&gt;&#xA;&lt;p&gt;One drawback of such dynamic provisioning is a phenomenon called &amp;ldquo;Cold Start&amp;rdquo;. Basically,&#xA;applications that haven&amp;rsquo;t been used for a while take longer to startup and to handle the&#xA;first request.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
