<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Immutability on Mikhail Shilkov</title>
    <link>https://mikhail.io/tags/immutability/</link>
    <description>Recent content in Immutability on Mikhail Shilkov</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Mikhail Shilkov - All rights reserved</copyright>
    <lastBuildDate>Fri, 13 May 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mikhail.io/tags/immutability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tweaking immutable objects with C# and Fody</title>
      <link>https://mikhail.io/2016/05/tweaking-immutable-objects-with-csharp-and-fody/</link>
      <pubDate>Fri, 13 May 2016 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2016/05/tweaking-immutable-objects-with-csharp-and-fody/</guid>
      <description>&lt;p&gt;Immutable data structures provide a lot of benefits&#xA;to programmers, especially when representing domain&#xA;&lt;a href=&#34;https://lostechies.com/joeocampo/2007/04/23/a-discussion-on-domain-driven-design-value-objects/&#34;&gt;value objects&lt;/a&gt;.&#xA;Immutability is an essential part of functional programming paradigm.&#xA;The concept is useful in object-oriented languages too, but you have&#xA;to pay some price to get this advantage.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
