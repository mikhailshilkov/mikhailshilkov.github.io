<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>T-SQL on Mikhail Shilkov</title>
    <link>https://mikhail.io/tags/t-sql/</link>
    <description>Recent content in T-SQL on Mikhail Shilkov</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Mikhail Shilkov - All rights reserved</copyright>
    <lastBuildDate>Fri, 15 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mikhail.io/tags/t-sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>T-SQL MERGE statement is underrated</title>
      <link>https://mikhail.io/2016/04/t-sql-merge-statement-is-underrated/</link>
      <pubDate>Fri, 15 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2016/04/t-sql-merge-statement-is-underrated/</guid>
      <description>&lt;p&gt;How many times did you write a SQL to &lt;strong&gt;save&lt;/strong&gt; a row without knowing whether the same&#xA;primary key already exists or not? You just get an object in your data access layer and&#xA;you want to save all fields into the database.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL: produce resultset with N rows</title>
      <link>https://mikhail.io/2014/06/03/sql-produce-resultset-with-n-rows/</link>
      <pubDate>Tue, 03 Jun 2014 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2014/06/03/sql-produce-resultset-with-n-rows/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s talk about T-SQL today.&lt;/p&gt;&#xA;&lt;p&gt;Sometimes you need to produce a result set, which would contain N rows with numbers 1&amp;hellip;N in each row. For example, I needed to calculate some statistics per week for N weeks starting from today and going back to the past.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
