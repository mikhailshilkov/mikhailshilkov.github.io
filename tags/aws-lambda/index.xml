<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS Lambda on Mikhail Shilkov</title>
    <link>https://mikhail.io/tags/aws-lambda/</link>
    <description>Recent content in AWS Lambda on Mikhail Shilkov</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Mikhail Shilkov - All rights reserved</copyright>
    <lastBuildDate>Tue, 05 Jan 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mikhail.io/tags/aws-lambda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Lambda: Cold Start Duration per Instance Size</title>
      <link>https://mikhail.io/serverless/coldstarts/aws/instances/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/aws/instances/</guid>
      <description>&lt;p&gt;AWS Lambda has a setting to define the memory size that gets allocated to a single instance of a function. The CPU resources are allocated proportionally to the memory. So, in theory, larger instances could start faster.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Lambda: Cold Start Duration per Language</title>
      <link>https://mikhail.io/serverless/coldstarts/aws/languages/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/aws/languages/</guid>
      <description>&lt;p&gt;The following chart shows the typical range of cold starts in AWS Lambda, broken down per language. The darker ranges are the most common 67% of durations, and lighter ranges include 95%.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cold Starts in AWS Lambda</title>
      <link>https://mikhail.io/serverless/coldstarts/aws/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/aws/</guid>
      <description>&lt;p&gt;This article describes AWS Lambda—the dynamically scaled and billed-per-execution compute service. Instances of Lambdas are added and removed dynamically. When a new instance handles its first request, the response time increases, which is called a &lt;strong&gt;cold start&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comparison of Cold Starts in Serverless Functions across AWS, Azure, and GCP</title>
      <link>https://mikhail.io/serverless/coldstarts/big3/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/big3/</guid>
      <description>&lt;p&gt;This article compares Function-as-a-Service offerings of Big-3 cloud providers in terms of cold starts. AWS Lambda, Azure Functions (Consumption Plan), and Google Cloud Functions are all dynamically scaled and billed-per-execution compute services. Instances of cloud functions are added and removed dynamically. When a new instance handles its first request, the response time increases, which is called a &lt;strong&gt;cold start&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>When Does Cold Start Happen on AWS Lambda?</title>
      <link>https://mikhail.io/serverless/coldstarts/aws/intervals/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/aws/intervals/</guid>
      <description>&lt;p&gt;The first cold start happens when the very first request comes in.&lt;/p&gt;&#xA;&lt;p&gt;After that request is processed, the instance stays alive for the time being to be reused for subsequent requests. But for how long?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cold Start Duration of VPC-connected AWS Lambda</title>
      <link>https://mikhail.io/serverless/coldstarts/aws/vpc/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/serverless/coldstarts/aws/vpc/</guid>
      <description>&lt;p&gt;AWS Lambda might need to access resources inside Amazon Virtual Private Cloud (Amazon VPC). In the past, configuring VPC access slowed down the cold starts significantly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>InfiniCache: Distributed Cache on Top of AWS Lambda (paper review)</title>
      <link>https://mikhail.io/2020/03/infinicache-distributed-cache-on-aws-lambda/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2020/03/infinicache-distributed-cache-on-aws-lambda/</guid>
      <description>&lt;p&gt;&amp;ldquo;InfiniCache: Exploiting Ephemeral Serverless Functions to Build a Cost-Effective Memory Cache&amp;rdquo; by Ao Wang, et al. (&lt;a href=&#34;https://www.usenix.org/conference/fast20/presentation/wang-ao&#34;&gt;link&lt;/a&gt;) is a recently published paper which describes a prototype of a serverless distributed caching system sitting atop AWS Lambda.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Provisioned Concurrency: Avoiding Cold Starts in AWS Lambda</title>
      <link>https://mikhail.io/2019/12/aws-lambda-provisioned-concurrency-no-cold-starts/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/12/aws-lambda-provisioned-concurrency-no-cold-starts/</guid>
      <description>&lt;p&gt;AWS recently &lt;a href=&#34;https://aws.amazon.com/blogs/aws/new-provisioned-concurrency-for-lambda-functions/&#34;&gt;announced&lt;/a&gt; the launch of &lt;strong&gt;Provisioned Concurrency&lt;/strong&gt;, a new feature of AWS Lambda that intends to solve the problem of cold starts. In this article, we take another look at the problem of latency-critical serverless applications, and how the new feature impacts the status-quo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Choosing the Best Deployment Tool for Your Serverless Applications</title>
      <link>https://mikhail.io/2019/11/choosing-the-best-deployment-tool-for-serverless-applications/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/11/choosing-the-best-deployment-tool-for-serverless-applications/</guid>
      <description>&lt;p&gt;Function-as-a-Service solutions, such as AWS Lambda and Azure Functions, are a great way to build modern, scalable, and affordable cloud-native applications. By delegating routine work to cloud providers, serverless applications focus on custom logic to provide the ultimate business value. But, in fact, serverless is more than cloud functions. It&amp;rsquo;s storage, HTTP gateways, databases, queues, monitoring, and security&amp;mdash;and your serverless applications are likely to use multiple managed services and consist of many moving parts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Lambda vs. Azure Functions: 10 Major Differences</title>
      <link>https://mikhail.io/2019/10/aws-lambda-vs-azure-functions-ten-major-differences/</link>
      <pubDate>Sun, 20 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/10/aws-lambda-vs-azure-functions-ten-major-differences/</guid>
      <description>&lt;p&gt;Forget about managing virtual machines or paying for idle hardware! Serverless compute brings unlimited scale and high availability to every company in the world, from small startups to multinational corporations. At least, that’s the vision of Amazon and Microsoft, today’s biggest cloud vendors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Avoid Cost Pitfalls by Monitoring APIs in AWS Lambda</title>
      <link>https://mikhail.io/2019/08/how-to-avoid-cost-pitfalls-by-monitoring-apis-in-aws-lambda/</link>
      <pubDate>Fri, 23 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/08/how-to-avoid-cost-pitfalls-by-monitoring-apis-in-aws-lambda/</guid>
      <description>&lt;p&gt;The modern software world runs on application programming interfaces, otherwise known as APIs. There is an API for everything: charging a credit card, sending an email, finding an address on a map, or hailing a taxi.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Lambda Cold Starts After 10 Minutes</title>
      <link>https://mikhail.io/2019/08/aws-lambda-cold-starts-after-10-minutes/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/08/aws-lambda-cold-starts-after-10-minutes/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve just released an update to the &lt;a href=&#34;https://mikhail.io/serverless/coldstarts/&#34;&gt;Serverless Cold Starts&lt;/a&gt; section of my website. The most significant change to the previous dataset seems to be in how AWS treats idle instances of AWS Lambda.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Concurrency and Isolation in Serverless Functions</title>
      <link>https://mikhail.io/2019/03/concurrency-and-isolation-in-serverless-functions/</link>
      <pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/03/concurrency-and-isolation-in-serverless-functions/</guid>
      <description>&lt;p&gt;Serverless vendors have different approaches when it comes to sharing or isolating resources between multiple executions of the same cloud function. In this article, I&amp;rsquo;ll explore the execution concurrency models of three FaaS offerings and the associated trade-offs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visualizing Cold Starts</title>
      <link>https://mikhail.io/2019/03/visualizing-cold-starts/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/03/visualizing-cold-starts/</guid>
      <description>&lt;p&gt;I &lt;a href=&#34;https://mikhail.io/serverless/coldstarts/&#34;&gt;wrote a lot&lt;/a&gt; about cold starts of serverless functions. The articles are full of charts and numbers which are hopefully useful but might be hard to internalize. I decided to come up with a way to represent colds starts visually.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Serverless at Scale: Serving StackOverflow-like Traffic</title>
      <link>https://mikhail.io/2019/serverless-at-scale-serving-stackoverflow-like-traffic/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/serverless-at-scale-serving-stackoverflow-like-traffic/</guid>
      <description>&lt;p&gt;Serverless compute is a very productive and quick way to get an application up and running. A developer writes a piece of code that solves a particular task and uploads it to the cloud. The provider handles code deployment and the ops burden of managing all the required infrastructure, so that the Function is always available, secure and performant.&lt;/p&gt;</description>
    </item>
    <item>
      <title>From 0 to 1000 Instances: How Serverless Providers Scale Queue Processing</title>
      <link>https://mikhail.io/2018/11/from-0-to-1000-instances-how-serverless-providers-scale-queue-processing/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/11/from-0-to-1000-instances-how-serverless-providers-scale-queue-processing/</guid>
      <description>&lt;p&gt;Whenever I see a &amp;ldquo;Getting Started with Function-as-a-Service&amp;rdquo; tutorial, it usually shows off&#xA;a synchronous HTTP-triggered scenario. In my projects, though, I use a lot of asynchronous&#xA;functions triggered by a queue or an event stream.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Serverless: Cold Start War</title>
      <link>https://mikhail.io/2018/08/serverless-cold-start-war/</link>
      <pubDate>Thu, 30 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/08/serverless-cold-start-war/</guid>
      <description>&lt;p&gt;&lt;em&gt;The newer and much more detailed cold start comparison is now available: &lt;a href=&#34;https://mikhail.io/serverless/coldstarts/&#34;&gt;Cold Starts in Serverless Functions&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Serverless cloud services are hot. Except when they are not :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Lambda Warmer as Pulumi Component</title>
      <link>https://mikhail.io/2018/08/aws-lambda-warmer-as-pulumi-component/</link>
      <pubDate>Thu, 02 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/08/aws-lambda-warmer-as-pulumi-component/</guid>
      <description>&lt;p&gt;Out of curiosity, I&amp;rsquo;m currently investigating cold starts of Function-as-a-Service platforms of major cloud providers. Basically,&#xA;if a function is not called for several minutes, the cloud instance behind it might be recycled, and then the next request will&#xA;take longer because a new instance will need to be provisioned.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Started with AWS Lambda in Pulumi</title>
      <link>https://mikhail.io/2018/07/getting-started-with-aws-lambda-in-pulumi/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/07/getting-started-with-aws-lambda-in-pulumi/</guid>
      <description>&lt;p&gt;For a small research project of mine, I needed to create HTTP triggered&#xA;AWS Lambda&amp;rsquo;s in all supported programming languages.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m not a power AWS user, so I get easily confused about the configuration&#xA;of things like IAM roles or API Gateway. Moreover, I wanted my environment to&#xA;be reproducible, so manual AWS Console wasn&amp;rsquo;t a good option.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
