<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debugging on Mikhail Shilkov</title>
    <link>https://mikhail.io/tags/debugging/</link>
    <description>Recent content in Debugging on Mikhail Shilkov</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Mikhail Shilkov - All rights reserved</copyright>
    <lastBuildDate>Thu, 16 Oct 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mikhail.io/tags/debugging/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nice way to kill your SQL Server</title>
      <link>https://mikhail.io/2014/10/16/nice-way-to-kill-your-sql-server/</link>
      <pubDate>Thu, 16 Oct 2014 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2014/10/16/nice-way-to-kill-your-sql-server/</guid>
      <description>&lt;p&gt;Are you getting enormous amount of&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;The activated proc &amp;#39;...&amp;#39; running on queue &amp;#39;...&amp;#39; output the following:&#xA;&amp;#39;The service queue &amp;#34;...&amp;#34; is currently disabled.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;errors from SQL Server? Keep on reading!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sgen to precompile classes for XmlSerializer</title>
      <link>https://mikhail.io/2014/05/21/sgen-to-precompile-classes-for-xmpserializer/</link>
      <pubDate>Wed, 21 May 2014 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2014/05/21/sgen-to-precompile-classes-for-xmpserializer/</guid>
      <description>&lt;p&gt;During my investigation of our ASP.NET application performance issue, I&amp;rsquo;ve found out that XmlSerializer may require a long warm-up. The first time, when it&amp;rsquo;s used for a specific class (de-)serialization, can take up to 500 ms om my machine! We use XmlSerializer to encode/decode user preferences. Having 40 different classes being deserialized at user login lead to a massive delay of 14 seconds. This is only for the first user login after the application start-up, but you do quite a lot of &amp;lsquo;first times&amp;rsquo; every day while developing the application.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use Fiddler to debug urlfetch requests in Google AppEngine</title>
      <link>https://mikhail.io/2012/09/02/use-fiddler-to-debug-urlfetch-requests-in-google-appengine/</link>
      <pubDate>Sun, 02 Sep 2012 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2012/09/02/use-fiddler-to-debug-urlfetch-requests-in-google-appengine/</guid>
      <description>&lt;p&gt;In &lt;a href=&#34;http://www.tripbenefit.com&#34; title=&#34;TripBenefit.com - travel in St. Petersburg, Russia&#34;&gt;TripBenefit&lt;/a&gt; application, we use a lot of web crawling to get data from third-party websites. As the application works on top of Google AppEngine, the &lt;a href=&#34;https://developers.google.com/appengine/docs/python/urlfetch/fetchfunction?hl=ru&#34; title=&#34;urlfetch.fetch() docs&#34;&gt;urlfetch.fetch()&lt;/a&gt; function is used to send HTTP requests and get responses.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
