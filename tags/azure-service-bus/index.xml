<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azure Service Bus on Mikhail Shilkov</title>
    <link>https://mikhail.io/tags/azure-service-bus/</link>
    <description>Recent content in Azure Service Bus on Mikhail Shilkov</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Mikhail Shilkov - All rights reserved</copyright>
    <lastBuildDate>Mon, 24 Jul 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mikhail.io/tags/azure-service-bus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Custom Autoscaling with Durable Functions</title>
      <link>https://mikhail.io/2017/07/custom-autoscaling-with-durable-functions/</link>
      <pubDate>Mon, 24 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2017/07/custom-autoscaling-with-durable-functions/</guid>
      <description>&lt;p&gt;In my previous post&#xA;&lt;a href=&#34;https://mikhail.io/2017/07/custom-auto-scaling-in-azure/&#34;&gt;Custom Autoscaling of Azure App Service with a Function App&lt;/a&gt;&#xA;I&amp;rsquo;ve created a Function App which watches a Service Bus Subscription&#xA;backlog and adjusts the scale of App Service based on the observed load.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Custom Autoscaling of Azure App Service with a Function App</title>
      <link>https://mikhail.io/2017/07/custom-auto-scaling-in-azure/</link>
      <pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2017/07/custom-auto-scaling-in-azure/</guid>
      <description>&lt;p&gt;The power of cloud computing comes from its elasticity and ability to adapt to changing&#xA;load. Most Azure services can be scaled up or down manually: by human interaction in the&#xA;portal, or by running a command or a script.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sending Large Batches to Azure Service Bus</title>
      <link>https://mikhail.io/2017/07/sending-large-batches-to-azure-service-bus/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2017/07/sending-large-batches-to-azure-service-bus/</guid>
      <description>&lt;p&gt;Azure Service Bus client supports sending messages in batches (&lt;code&gt;SendBatch&lt;/code&gt;&#xA;and &lt;code&gt;SendBatchAsync&lt;/code&gt; methods of &lt;code&gt;QueueClient&lt;/code&gt; and &lt;code&gt;TopicClient&lt;/code&gt;). However,&#xA;the size of a single batch must stay below 256k bytes, otherwise the whole&#xA;batch will get rejected.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reliable Consumer of Azure Event Hubs</title>
      <link>https://mikhail.io/2017/05/reliable-consumer-of-azure-event-hubs/</link>
      <pubDate>Mon, 29 May 2017 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2017/05/reliable-consumer-of-azure-event-hubs/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://azure.microsoft.com/en-us/services/event-hubs/&#34;&gt;Azure Event Hubs&lt;/a&gt; is&#xA;a log-based messaging system-as-a-service in Azure cloud. It&amp;rsquo;s designed to be able to handle huge&#xA;amount of data, and naturally supports multiple consumers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure Service Bus Entity Metrics .NET APIs</title>
      <link>https://mikhail.io/2017/03/azure-service-bus-entity-metrics-dotnet-apis/</link>
      <pubDate>Thu, 02 Mar 2017 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2017/03/azure-service-bus-entity-metrics-dotnet-apis/</guid>
      <description>&lt;p&gt;Azure Service Bus is a key component of many background processing applications hosted in Azure, so it definitely requires monitoring and alerting. My goal for our monitoring solution was to provide an API to retrieve the following parameters for each Service Bus queue/topic in our application:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
