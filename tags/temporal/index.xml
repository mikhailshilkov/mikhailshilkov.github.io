<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Temporal on Mikhail Shilkov</title>
    <link>https://mikhail.io/tags/temporal/</link>
    <description>Recent content in Temporal on Mikhail Shilkov</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Mikhail Shilkov - All rights reserved</copyright>
    <lastBuildDate>Tue, 25 May 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mikhail.io/tags/temporal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Choosing the Number of Shards in Temporal History Service</title>
      <link>https://mikhail.io/2021/05/choose-the-number-of-shards-in-temporal-history-service/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2021/05/choose-the-number-of-shards-in-temporal-history-service/</guid>
      <description>&lt;p&gt;Today, I&amp;rsquo;m diving into the topic of tuning your Temporal clusters for optimal performance. More specifically, I will be discussing the single configuration option: the number of History service shards. Through a series of experiments, I’ll explain how a low number of shards can lead to contention, while a large number can cause excessive resource consumption.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Maru: Load Testing Tool for Temporal Workflows</title>
      <link>https://mikhail.io/2021/03/maru-load-testing-tool-for-temporal-workflows/</link>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2021/03/maru-load-testing-tool-for-temporal-workflows/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://temporal.io&#34;&gt;Temporal&lt;/a&gt; enables developers to build highly reliable applications without having to worry about all the edge cases. If you are new to Temporal, check out my article &lt;a href=&#34;https://mikhail.io/2020/10/temporal-open-source-workflows-as-code/&#34;&gt;Open Source Workflows as Code&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How To Deploy Temporal to Azure Kubernetes Service (AKS)</title>
      <link>https://mikhail.io/2020/11/how-to-deploy-temporal-to-azure-kubernetes-aks/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2020/11/how-to-deploy-temporal-to-azure-kubernetes-aks/</guid>
      <description>&lt;p&gt;In my article &lt;a href=&#34;https://mikhail.io/2020/10/practical-approach-to-temporal-architecture/&#34;&gt;A Practical Approach to Temporal Architecture&lt;/a&gt;, I outlined the various &lt;a href=&#34;https://temporal.io/&#34;&gt;Temporal&lt;/a&gt; components and how they interact. Today’s blog builds on this knowledge and demonstrates an example of deploying Temporal to Kubernetes and, more specifically, to Azure Kubernetes Service (AKS).&lt;/p&gt;</description>
    </item>
    <item>
      <title>How To Deploy Temporal to Azure Container Instances</title>
      <link>https://mikhail.io/2020/10/how-to-deploy-temporal-to-azure-container-instances/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2020/10/how-to-deploy-temporal-to-azure-container-instances/</guid>
      <description>&lt;p&gt;In &lt;a href=&#34;https://mikhail.io/2020/10/practical-approach-to-temporal-architecture/&#34;&gt;my previous article&lt;/a&gt;, I outlined the various components of &lt;a href=&#34;https://temporal.io&#34;&gt;Temporal&lt;/a&gt; and how they interact. Today&amp;rsquo;s blog builds on this knowledge and demonstrates an example Temporal deployment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Practical Approach to Temporal Architecture</title>
      <link>https://mikhail.io/2020/10/practical-approach-to-temporal-architecture/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2020/10/practical-approach-to-temporal-architecture/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://temporal.io&#34;&gt;Temporal&lt;/a&gt; enables developers to build highly reliable applications without having to worry about all the edge cases. If you are new to Temporal, check out my article &lt;a href=&#34;https://mikhail.io/2020/10/temporal-open-source-workflows-as-code/&#34;&gt;Open Source Workflows as Code&lt;/a&gt;. Now that you&amp;rsquo;re excited, I&amp;rsquo;ll cover how you can get up and running with Temporal.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Temporal: Open Source Workflows as Code</title>
      <link>https://mikhail.io/2020/10/temporal-open-source-workflows-as-code/</link>
      <pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2020/10/temporal-open-source-workflows-as-code/</guid>
      <description>&lt;p&gt;Regular readers of my blog may recognize me as a big fan of &lt;a href=&#34;https://docs.microsoft.com/azure/azure-functions/durable/durable-functions-overview&#34;&gt;Azure Durable Functions&lt;/a&gt;. Durable Functions are an extension of Azure Functions that lets you write &lt;strong&gt;stateful&lt;/strong&gt; functions and &lt;strong&gt;workflows&lt;/strong&gt;. The SDK does a lot behind the scenes allowing you to focus exclusively on business logic:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
