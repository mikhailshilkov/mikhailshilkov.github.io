<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>F# on Mikhail Shilkov</title>
    <link>https://mikhail.io/tags/fsharp/</link>
    <description>Recent content in F# on Mikhail Shilkov</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Mikhail Shilkov - All rights reserved</copyright>
    <lastBuildDate>Wed, 16 Dec 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mikhail.io/tags/fsharp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Farmer or Pulumi? Why not both!</title>
      <link>https://mikhail.io/2020/12/farmer-or-pulumi-why-not-both/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2020/12/farmer-or-pulumi-why-not-both/</guid>
      <description>&lt;p&gt;&lt;em&gt;The post is a part of&#xA;&lt;a href=&#34;https://sergeytihon.com/2020/10/22/f-advent-calendar-in-english-2020/&#34;&gt;F# Advent Calendar 2020&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;You are a proud F# developer. You deploy your applications to Microsoft Azure. You know that you should never right-click-deploy to production. You don&amp;rsquo;t create important Azure resources via the Azure portal. You are awesome.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unit Testing Cloud Deployments with Pulumi in F#</title>
      <link>https://mikhail.io/2020/05/unit-testing-cloud-deployments-with-pulumi-in-fsharp/</link>
      <pubDate>Thu, 21 May 2020 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2020/05/unit-testing-cloud-deployments-with-pulumi-in-fsharp/</guid>
      <description>&lt;p&gt;Because Pulumi uses general-purpose programming languages to provision cloud resources, you can take advantage of native tools and perform automated tests of your infrastructure. The full power of each language is available, including access to libraries and frameworks for testing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Santa Brings Cloud to Every Developer</title>
      <link>https://mikhail.io/2019/12/santa-brings-cloud-to-every-developer/</link>
      <pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2019/12/santa-brings-cloud-to-every-developer/</guid>
      <description>&lt;p&gt;&lt;em&gt;The post is a part of&#xA;&lt;a href=&#34;https://sergeytihon.com/2019/11/05/f-advent-calendar-in-english-2019/&#34;&gt;F# Advent Calendar 2019&lt;/a&gt;.&#xA;It&amp;rsquo;s Christmas time!&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Cloud is everywhere, and yet it&amp;rsquo;s still inaccessible to millions of developers and IT pros. With shining yet cloudy eyes return they from KubeCon&amp;rsquo;s and re:Invent&amp;rsquo;s, just to pick up an issue in Jira, fix yet another &lt;code&gt;SingletonProxyFactoryBean&lt;/code&gt; in their J2EE application, commit it to SVN, and hope it will be delivered in three months to the data center in their HQ basement.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Fairy Tale of F# and Durable Functions</title>
      <link>https://mikhail.io/2018/12/fairy-tale-of-fsharp-and-durable-functions/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/12/fairy-tale-of-fsharp-and-durable-functions/</guid>
      <description>&lt;p&gt;&lt;em&gt;The post is a part of&#xA;&lt;a href=&#34;https://sergeytihon.com/2018/10/22/f-advent-calendar-in-english-2018/&#34;&gt;F# Advent Calendar 2018&lt;/a&gt;.&#xA;It&amp;rsquo;s Christmas time!&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;This summer I was hired by the office of Santa Claus. Santa is not just a fairy tale&#xA;character on his ownâ€”he leads a large organization that supplies gifts and happiness to millions of&#xA;children around the globe. Like any large organization, Santa&amp;rsquo;s office employs an impressive number of&#xA;IT systems.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Monads explained in C# (again)</title>
      <link>https://mikhail.io/2018/07/monads-explained-in-csharp-again/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/07/monads-explained-in-csharp-again/</guid>
      <description>&lt;p&gt;I love functional programming for the simplicity that it brings.&lt;/p&gt;&#xA;&lt;p&gt;But at the same time, I realize that learning functional programming is a challenging&#xA;process. FP comes with a baggage of unfamiliar vocabulary that can be daunting for&#xA;somebody coming from an object-oriented language like C#.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Awesome F# Exchange 2018</title>
      <link>https://mikhail.io/2018/04/fsharp-exchange-2018/</link>
      <pubDate>Sat, 07 Apr 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/04/fsharp-exchange-2018/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m writing this post in the train to London Stensted, on my way back from F# Exchange 2018&#xA;conference.&lt;/p&gt;&#xA;&lt;p&gt;F# Exchange is a yearly conference taking place in London, and 2018 edition was the first one&#xA;for me personally. I also had an honour to speak there about creating Azure Functions with&#xA;F#.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure Durable Functions in F#</title>
      <link>https://mikhail.io/2018/02/azure-durable-functions-in-fsharp/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/02/azure-durable-functions-in-fsharp/</guid>
      <description>&lt;p&gt;Azure Functions are designed for stateless, fast-to-execute,&#xA;simple actions. Typically, they are triggered by an HTTP call or a queue message,&#xA;then they read something from the storage or database and return the result&#xA;to the caller or send it to another queue. All within several seconds at most.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tic-Tac-Toe with F#, Azure Functions, HATEOAS and Property-Based Testing</title>
      <link>https://mikhail.io/2018/01/tictactoe-with-fsharp-azurefunctions-hateoas-and-property-based-testing/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2018/01/tictactoe-with-fsharp-azurefunctions-hateoas-and-property-based-testing/</guid>
      <description>&lt;p&gt;This post describes a toy application that I&amp;rsquo;ve built with F# and Azure Functions&#xA;in about 1 day of work. It shows a simple end-to-end implementation with some&#xA;useful techniques applied, and can be used as a reference point for anyone interested in&#xA;one of the topics mentioned in the title.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Precompiled Azure Functions in F#</title>
      <link>https://mikhail.io/2017/12/precompiled-azure-functions-in-fsharp/</link>
      <pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2017/12/precompiled-azure-functions-in-fsharp/</guid>
      <description>&lt;p&gt;&lt;em&gt;This post is giving a start to&#xA;&lt;a href=&#34;https://sergeytihon.com/2017/10/22/f-advent-calendar-in-english-2017/&#34;&gt;F# Advent Calendar in English 2017&lt;/a&gt;.&#xA;Please follow the calendar for all the great posts to come.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Azure Functions is a &amp;ldquo;serverless&amp;rdquo; cloud offering from Microsoft. It&#xA;allows you to run your custom code as response to events in the cloud.&#xA;Functions are very easy to&#xA;start with; and you only pay per execution - with free allowance sufficient&#xA;for any proof-of-concept, hobby project or even low-usage production loads.&#xA;And when you need more, Azure will scale your project up automatically.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure F#unctions Talk at FSharping Meetup in Prague</title>
      <link>https://mikhail.io/2017/11/azure-functions-fsharp-talk/</link>
      <pubDate>Fri, 10 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2017/11/azure-functions-fsharp-talk/</guid>
      <description>&lt;p&gt;On November 8th 2017 I gave a talk about developing Azure Functions&#xA;in F# at&#xA;&lt;a href=&#34;https://www.meetup.com/FSharping/events/244137693/&#34;&gt;FSharping&lt;/a&gt;&#xA;meetup in Prague.&lt;/p&gt;&#xA;&lt;p&gt;I really enjoyed giving this talk: the audience was&#xA;great and asked awesome questions. One more prove that F# community is&#xA;so welcoming and energizing!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why F# and Functional Programming Talk at .NET Development Nederland Meetup</title>
      <link>https://mikhail.io/2017/05/why-fsharp-and-functional-programming-will-make-you-a-better-developer-talk/</link>
      <pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2017/05/why-fsharp-and-functional-programming-will-make-you-a-better-developer-talk/</guid>
      <description>&lt;p&gt;On May 8th 2017 I gave a talk at the&#xA;&lt;a href=&#34;https://www.meetup.com/dotNET-Development-Nederland/&#34;&gt;.NET Development Nederland&lt;/a&gt;&#xA;group in Amsterdam.&lt;/p&gt;&#xA;&lt;p&gt;Here are the slides for the people who were there and want to revisit&#xA;the covered topics.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Coding Puzzle in F#: Find the Number of Islands</title>
      <link>https://mikhail.io/2017/02/coding-puzzle-in-fsharp-find-the-number-of-islands/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2017/02/coding-puzzle-in-fsharp-find-the-number-of-islands/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a programming puzzle. Given 2D matrix of 0&amp;rsquo;s and 1&amp;rsquo;s, find the number of islands.&#xA;A group of connected 1&amp;rsquo;s forms an island. For example, the below matrix contains 5 islands&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Praise of Advent of Code 2016</title>
      <link>https://mikhail.io/2017/01/my-praise-of-advent-of-code-2016/</link>
      <pubDate>Thu, 26 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2017/01/my-praise-of-advent-of-code-2016/</guid>
      <description>&lt;p&gt;During the last days of December I was pleasing my internal need for solving&#xA;puzzles and tricky tasks by going through&#xA;&lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of Code 2016&lt;/a&gt; challenge.&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Functional Programming &amp; F# Talks at Webscale Architecture Meetup</title>
      <link>https://mikhail.io/2017/01/functional-programming-fsharp-talks/</link>
      <pubDate>Tue, 10 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2017/01/functional-programming-fsharp-talks/</guid>
      <description>&lt;p&gt;On January 10th of 2017 I gave two talks at the&#xA;&lt;a href=&#34;https://www.meetup.com/Webscale-Architecture-NL/events/235727572/&#34;&gt;Webscale Architecture NL meetup&lt;/a&gt; group in Utrecht.&lt;/p&gt;&#xA;&lt;p&gt;Here are the slides for the people who were there and want to revisit&#xA;the covered topics.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introducing Stream Processing in F#</title>
      <link>https://mikhail.io/2016/11/introducing-stream-processing-in-fsharp/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2016/11/introducing-stream-processing-in-fsharp/</guid>
      <description>&lt;p&gt;&lt;em&gt;The post was published for&#xA;&lt;a href=&#34;https://sergeytihon.wordpress.com/2016/10/23/f-advent-calendar-in-english-2016/&#34;&gt;F# Advent Calendar 2016&lt;/a&gt;,&#xA;thus the examples are themed around the Christmas gifts.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;This article is my naive introduction to the data processing discipline called &lt;strong&gt;Stream Processing&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comparing Scala to F#</title>
      <link>https://mikhail.io/2016/08/comparing-scala-to-fsharp/</link>
      <pubDate>Fri, 05 Aug 2016 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2016/08/comparing-scala-to-fsharp/</guid>
      <description>&lt;p&gt;F# and Scala are quite similar languages from 10.000 feet view. Both are&#xA;functional-first languages developed for the virtual machines where imperative&#xA;languages dominate. C# for .NET and Java for JVM are still &lt;em&gt;lingua franca&lt;/em&gt;,&#xA;but alternatives are getting stronger.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building a Poker Bot: Functional Fold as Decision Tree Pattern</title>
      <link>https://mikhail.io/2016/07/building-a-poker-bot-functional-fold-as-decision-tree-pattern/</link>
      <pubDate>Fri, 22 Jul 2016 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2016/07/building-a-poker-bot-functional-fold-as-decision-tree-pattern/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the fifth part of &lt;strong&gt;Building a Poker Bot&lt;/strong&gt; series where I describe my experience developing bot software&#xA;to play in online poker rooms. I&amp;rsquo;m building the bot with .NET framework and F# language which makes the task relatively&#xA;easy and very enjoyable. Here are the previous parts:&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building a Poker Bot with Akka.NET Actors</title>
      <link>https://mikhail.io/2016/04/building-a-poker-bot-with-akka-net-actors/</link>
      <pubDate>Sat, 09 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2016/04/building-a-poker-bot-with-akka-net-actors/</guid>
      <description>&lt;p&gt;&lt;i&gt;This is the fourth part of &lt;strong&gt;Building a Poker Bot&lt;/strong&gt; series where I describe my experience developing bot software to play in online poker rooms. I&amp;rsquo;m building the bot with .NET framework and F# language which makes the task relatively easy and very enjoyable. Here are the previous parts:&lt;/i&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Functional Actor Patterns with Akka.NET and F#</title>
      <link>https://mikhail.io/2016/03/functional-actor-patterns-with-akkadotnet-and-fsharp/</link>
      <pubDate>Mon, 21 Mar 2016 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2016/03/functional-actor-patterns-with-akkadotnet-and-fsharp/</guid>
      <description>&lt;p&gt;My exploration of Actor model started with &lt;a href=&#34;http://getakka.net&#34;&gt;Akka.NET&lt;/a&gt; framework - a .NET port of&#xA;JVM-based &lt;a href=&#34;http://akka.io&#34;&gt;Akka&lt;/a&gt;. Actor programming model made a lot of sense to me, but once&#xA;I started playing with it, some questions arose. Most of those questions were related to the&#xA;following &lt;a href=&#34;http://doc.akka.io/docs/akka/2.4.2/general/actors.html&#34;&gt;definition&lt;/a&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building a Poker Bot: Mouse Movements</title>
      <link>https://mikhail.io/2016/03/building-a-poker-bot-mouse-movements/</link>
      <pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2016/03/building-a-poker-bot-mouse-movements/</guid>
      <description>&lt;p&gt;This is the third part of &lt;strong&gt;Building a Poker Bot&lt;/strong&gt; series where I describe my experience developing bot software&#xA;to play in online poker rooms. I&amp;rsquo;m building the bot with .NET framework and F# language which makes the task relatively easy and very enjoyable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building a Poker Bot: String and Number Recognition</title>
      <link>https://mikhail.io/2016/02/building-a-poker-bot-string-recognition/</link>
      <pubDate>Wed, 10 Feb 2016 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2016/02/building-a-poker-bot-string-recognition/</guid>
      <description>&lt;p&gt;This is the second part of &lt;strong&gt;Building a Poker Bot&lt;/strong&gt; series where I describe my experience developing bot software&#xA;to play in online poker rooms. I&amp;rsquo;m building the bot with .NET framework and F# language which makes the task relatively easy and very enjoyable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building a Poker Bot: Card Recognition</title>
      <link>https://mikhail.io/2016/02/building-a-poker-bot-card-recognition/</link>
      <pubDate>Mon, 01 Feb 2016 00:00:00 +0000</pubDate>
      <guid>https://mikhail.io/2016/02/building-a-poker-bot-card-recognition/</guid>
      <description>&lt;p&gt;This is the first part of &lt;strong&gt;Building a Poker Bot&lt;/strong&gt; series where I describe my experience developing bot software&#xA;for online poker rooms. I&amp;rsquo;m building the bot with .NET framework and F# language which makes the task relatively&#xA;easy and very enjoyable.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
